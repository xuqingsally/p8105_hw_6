mutate(boro = str_to_title(boro))
nyc_inspections %>%
group_by(boro, grade) %>%
summarize(n = n()) %>%
filter(grade %in% c("A","B","C"), boro != "Missing")
nyc_inspections %>%
group_by(boro, grade) %>%
summarize(n = n()) %>%
filter(grade %in% c("A","B","C"), boro != "Missing") %>%
spread(key = grade, value = n)
nyc_inspections %>%
group_by(boro, grade) %>%
summarize(n = n()) %>%
filter(grade %in% c("A","B","C"), boro != "Missing") %>%
spread(key = grade, value = n) %>%
mutate(boro = str_to_title(boro))
nyc_inspections %>%
plot_ly(x = ~boro, y = ~n, type = "bar",
alpha = 0.5,
color = ~grade,
text = ~text_label)
nyc_inspections %>%
plot_ly(x = ~boro, y = ~n, type = "bar",
alpha = 0.5,
color = ~grade)
nyc_inspections %>%
group_by(boro, grade) %>%
summarize(n = n()) %>%
filter(grade %in% c("A","B","C"), boro != "Missing") %>%
spread(key = grade, value = n) %>%
plot_ly(x = ~boro, y = ~n, type = "bar",
alpha = 0.5,
color = ~grade)
nyc_inspections = get_all_inspections(url) %>%
bind_rows()
nyc_inspections %>%
group_by(boro, grade) %>%
summarize(n = n()) %>%
filter(grade %in% c("A","B","C"), boro != "Missing") %>%
spread(key = grade, value = n) %>%
plot_ly(x = ~boro, y = ~n, type = "bar",
alpha = 0.5,
color = ~grade)
nyc_inspections %>%
group_by(boro, grade) %>%
summarize(n = n()) %>%
filter(grade %in% c("A","B","C"), boro != "Missing") %>%
spread(key = grade, value = n)
bar_plot<- nyc_inspections %>%
group_by(boro, grade) %>%
summarize(n = n()) %>%
filter(grade %in% c("A","B","C"), boro != "Missing") %>%
spread(key = grade, value = n) %>%
ggplot(aes(x = boro, fill = grade)) + geom_bar()
ggplotly(bar_plot)
bar_plot<- nyc_inspections %>%
group_by(boro, grade) %>%
summarize(n = n()) %>%
filter(grade %in% c("A","B","C"), boro != "Missing") %>%
ggplot(aes(x = boro, fill = grade)) + geom_bar()
ggplotly(bar_plot)
bar_plot
bar_plot<- nyc_inspections %>%
group_by(boro, grade) %>%
summarize(n = n())
nyc_inspections %>%
group_by(boro, grade) %>%
summarize(n = n())
nyc_inspections %>%
group_by(boro, grade) %>%
summarize(n = n()) %>%
filter(grade %in% c("A","B","C"), boro != "Missing")
nyc_inspections %>%
group_by(boro, grade) %>%
filter(grade %in% c("A","B","C"), boro != "Missing") %>%
summarize(n = n())
nyc_inspections %>%
group_by(boro, grade) %>%
filter(grade %in% c("A","B","C"), boro != "Missing") %>%
summarize(n = n()) %>%
ggplot(aes(x = boro, y = n, fill = grade)) + geom_bar()
nyc_inspections %>%
group_by(boro, grade) %>%
filter(grade %in% c("A","B","C"), boro != "Missing") %>%
summarize(n = n()) %>%
ggplot(aes(x = boro, fill = grade)) + geom_bar()
nyc_inspections %>%
group_by(boro, grade) %>%
filter(grade %in% c("A","B","C"), boro != "Missing") %>%
summarize(n = n())
nyc_inspections %>%
group_by(boro, grade) %>%
filter(grade %in% c("A","B","C"), boro != "Missing") %>%
summarize(n = n()) %>%
ggplot(aes(x = boro, fill = n, color = grade)) + geom_bar()
nyc_inspections %>%
group_by(boro, grade) %>%
filter(grade %in% c("A","B","C"), boro != "Missing") %>%
summarize(n = n()) %>%
ggplot(aes(x = boro, fill = n)) + geom_bar()
nyc_inspections %>%
group_by(boro, grade) %>%
filter(grade %in% c("A","B","C"), boro != "Missing") %>%
summarize(n = n())
nyc_inspections %>%
group_by(boro, grade) %>%
filter(grade %in% c("A","B","C"), boro != "Missing") %>%
summarize(n = n()) %>%
ggplot(aes(x = boro, y = n)) + geom_bar()
nyc_inspections %>%
group_by(boro, grade) %>%
filter(grade %in% c("A","B","C"), boro != "Missing") %>%
summarize(n = n()) %>%
spread(key = grade, value = n) %>%
ggplot(aes(x = boro, fill = grade)) + geom_bar()
nyc_inspections %>%
group_by(boro, grade) %>%
filter(grade %in% c("A","B","C"), boro != "Missing") %>%
summarize(n = n()) %>%
spread(key = grade, value = n)
nyc_inspections %>%
group_by(boro, grade) %>%
filter(grade %in% c("A","B","C"), boro != "Missing") %>%
summarize(n = n()) %>%
spread(key = grade, value = n)
?ggplot
nyc_inspections %>%
group_by(boro, grade) %>%
filter(grade %in% c("A","B","C"), boro != "Missing") %>%
summarize(n = n()) %>%
spread(key = grade, value = n) %>%
ggplot(aes(x = boro, fill = grade)) +
geom_bar(stat="identity",position = "identity", alpha=.3)
nyc_inspections %>%
group_by(boro, grade) %>%
filter(grade %in% c("A","B","C"), boro != "Missing") %>%
ggplot(aes(x = boro, fill = grade)) +
geom_bar(stat="identity",position = "identity", alpha=.3)
nyc_inspections %>%
group_by(boro, grade) %>%
filter(grade %in% c("A","B","C"), boro != "Missing") %>%
ggplot(aes(x = boro, fill = grade)) +
geom_bar()
nyc_inspections %>%
group_by(boro, grade) %>%
filter(grade %in% c("A","B","C"), boro != "Missing") %>%
summarize(n = n())
nyc_inspections %>%
group_by(boro, grade) %>%
filter(grade %in% c("A","B","C"), boro != "Missing") %>%
ggplot(aes(x = boro, fill = grade)) +
geom_bar()
bar_plot<- nyc_inspections %>%
group_by(boro, grade) %>%
filter(grade %in% c("A","B","C"), boro != "Missing") %>%
ggplot(aes(x = boro, fill = grade)) +
geom_bar()
ggplotly(bar_plot)
nyc_inspections %>%
group_by(grade) %>%
plotly(x = ~grade, y = ~score, type = "box",
alpha = 0.5,
color = ~boro)
nyc_inspections %>%
plotly(x = ~grade, y = ~score, type = "box",
alpha = 0.5,
color = ~boro)
nyc_inspections %>%
plot_ly(x = ~grade, y = ~score, type = "box",
alpha = 0.5,
color = ~boro)
nyc_inspections %>%
plot_ly(x = ~grade, y = ~score, type = "box",
alpha = 0.5,
color = ~grade)
nyc_inspections %>%
filter(grade %in% c("A","B","C"), boro != "Missing") %>%
plot_ly(x = ~grade, y = ~score, type = "box",
alpha = 0.5,
color = ~grade)
nyc_inspections %>%
as.numeric(score) %>%
filter(grade %in% c("A","B","C"), boro != "Missing") %>%
plot_ly(x = ~grade, y = ~score, type = "box",
alpha = 0.5,
color = ~grade)
nyc_inspections$score<- as.numeric(nyc_inspections$score)
nyc_inspections %>%
filter(grade %in% c("A","B","C"), boro != "Missing") %>%
plot_ly(x = ~grade, y = ~score, type = "box",
alpha = 0.5,
color = ~grade)
nyc_inspections$score<- as.numeric(nyc_inspections$score)
nyc_inspections %>%
filter(grade %in% c("A","B","C"), boro != "Missing") %>%
plot_ly(x = ~grade, y = ~score, type = "box",
alpha = 0.5,
color = ~grade) %>%
layout(title = "Score distribution in grades")
library(flexdashboard)
library(tidyverse)
library(janitor)
library(stringr)
library(forcats)
library(viridis)
library(plotly)
library(shiny)
library(httr)
library(jsonlite)
library(zipcode)
library(maps)
boros = nyc_inspections %>% distinct(year) %>% pull()
selectInput("year_choice", label = h3("Select year"),
choices = years, selected = "1981")
boros = nyc_inspections %>% distinct(year) %>% pull()
selectInput("year_choice", label = h3("Select year"),
choices = year, selected = "1981")
rm(list = ls())
noaa<- read_csv("nynoaadat.zip")  %>%
separate(date, into = c("year", "month","day"), sep = "-")
View(noaa)
id = noaa %>% distinct(id) %>% pull()
selectInput("id_choice", label = h3("Select id"),
choices = id, selected = "US1NYAB0001")
max_year = 2010
min_year = noaa %>% distinct(year) %>% min()
sliderInput("year_range", label = h3("Choose year range"), min = min_year,
max = max_year, value = c(2, 29))
noaa %>% distinct(year) %>% min()
renderPlotly({
hexplot = filter(noaa, !is.na(tmax))%>%
filter(!is.na(tmin))%>%
mutate(tmax = as.numeric(tmax))%>%
mutate(tmin = as.numeric(tmin))%>%
filter(id == input$id_choice,
year %in% input$year_range[1]:input$year_range[2]) %>%
ggplot(aes(tmin, tmax)) +
geom_hex()+
labs(
x = "Minimum temperature (tenths of degrees C)",
y = "Maximum temperature (tenths of degrees C)",
caption = "ny_noaa_data_year"
) +
theme_classic()
ggplotly(hexplot)
})
id = noaa %>% distinct(id) %>% pull()
selectInput("id_choice", label = h3("Select id"),
choices = id, selected = "US1NYAB0001")
max_year = 2010
min_year = noaa %>% distinct(year) %>% min()
sliderInput("year_range", label = h3("Choose year range"), min = min_year,
max = max_year, value = c(2, 29))
min_year = noaa %>% distinct(year) %>% min()
noaa<- read_csv("nynoaadat.zip")  %>%
separate(date, into = c("year", "month","day"), sep = "-")
noaa$year<- as.numeric(noaa$year)
class(noaa$year)
renderPlotly({
hexplot = filter(noaa, !is.na(tmax))%>%
filter(!is.na(tmin))%>%
mutate(tmax = as.numeric(tmax))%>%
mutate(tmin = as.numeric(tmin))%>%
filter(id == input$id_choice,
year %in% input$year_range[1]:input$year_range[2]) %>%
mutate(text_label = str_c("year: ", year, '\nRating: ', rating)) %>%
ggplot(aes(tmin, tmax)) +
geom_hex()+
labs(
x = "Minimum temperature (tenths of degrees C)",
y = "Maximum temperature (tenths of degrees C)",
caption = "ny_noaa_data_year"
) +
theme_classic()
ggplotly(hexplot)
})
noaa$year<- as.numeric(noaa$year)
View(noaa)
sliderInput("year_range", label = h3("Choose year range"), min = min_year,
max = max_year, value = c(2, 20))
min_year = noaa %>% filter(id == input$id_choice) %>%
distinct(year) %>% min()
id = noaa %>% distinct(id) %>% pull()
id = noaa %>% distinct(id) %>% pull()
selectInput("id_choice", label = h3("Select id"),
choices = id, selected = "US1NYAB0001")
class(noaa$id)
library(flexdashboard)
library(tidyverse)
library(janitor)
library(stringr)
library(forcats)
library(viridis)
library(plotly)
library(shiny)
library(httr)
library(jsonlite)
ny_noaa_data_snowfall =
filter(noaa, snow > 0 & snow < 100)%>%
ggplot(aes(x = year, y = snow, fill = year, color = year)) +
geom_violin()+
labs(
x = "year",
y = "snowfall(mm)",
caption = "Data from ny_noaa_data"
) +
theme_classic() +
theme(legend.position = "bottom")
ggplotly(ny_noaa_data_snowfall)
ny_noaa_data_snowfall =
filter(noaa, snow > 0 & snow < 100)%>%
filter(id == input$id_choice) %>%
ggplot(aes(x = year, y = snow, fill = year, color = year)) +
geom_violin()+
labs(
x = "year",
y = "snowfall(mm)",
caption = "Data from ny_noaa_data"
) +
theme_classic() +
theme(legend.position = "bottom")
ggplotly(ny_noaa_data_snowfall)
rm(list = ls())
```{r}
noaa<- read_csv("nynoaadat.zip")  %>%
separate(date, into = c("year", "month","day"), sep = "-")
noaa$year<- as.numeric(noaa$year)
ny_noaa_data_snowfall =
filter(noaa, snow > 0 & snow < 100)%>%
ggplot(aes(x = year, y = snow, fill = year, color = year)) +
geom_violin()+
labs(
x = "year",
y = "snowfall(mm)",
caption = "Data from ny_noaa_data"
) +
theme_classic() +
theme(legend.position = "bottom")
ggplotly(ny_noaa_data_snowfall)
ny_noaa_data_snowfall =
filter(noaa, snow > 0 & snow < 100)%>%
ggplot(aes(x = year, y = snow, fill = year, color = year)) +
geom_violin()+
labs(
x = "year",
y = "snowfall(mm)",
caption = "Data from ny_noaa_data"
) +
theme_classic() +
theme(legend.position = "bottom")
ggplotly(ny_noaa_data_snowfall)
ny_noaa_data_snowfall =
filter(noaa, snow > 0 & snow < 100)%>%
ggplot(aes(x = year, y = snow, fill = year, color = year)) +
geom_violin()+
labs(
x = "year",
y = "snowfall(mm)",
caption = "Data from ny_noaa_data"
) +
theme_classic() +
theme(legend.position = "bottom")
ggplotly(ny_noaa_data_snowfall)
ny_noaa_data_snowfall =
filter(noaa, snow > 0 & snow < 100)%>%
ggplot(aes(x = year, y = snow, fill = year, color = year)) +
geom_violin()+
labs(
x = "year",
y = "snowfall(mm)",
caption = "Data from ny_noaa_data"
) +
theme_classic() +
theme(legend.position = "bottom")
View(ny_noaa_data_snowfall)
ny_noaa_data_snowfall =
filter(noaa, snow > 0 & snow < 100)%>%
group_by(year)
ggplot(aes(x = year, y = snow, fill = year, color = year)) +
geom_violin()+
labs(
x = "year",
y = "snowfall(mm)",
caption = "Data from ny_noaa_data"
) +
theme_classic() +
theme(legend.position = "bottom")
ggplotly(ny_noaa_data_snowfall)
ny_noaa_data_snowfall =
filter(noaa, snow > 0 & snow < 100)%>%
group_by(year)
ggplot(aes(x = year, y = snow, fill = year, color = year)) +
geom_violin()+
labs(
x = "year",
y = "snowfall(mm)",
caption = "Data from ny_noaa_data"
) +
theme_classic() +
theme(legend.position = "bottom")
ny_noaa_data_snowfall =
filter(noaa, snow > 0 & snow < 100)%>%
group_by(year) %>%
ggplot(aes(x = year, y = snow, fill = year, color = year)) +
geom_violin()+
labs(
x = "year",
y = "snowfall(mm)",
caption = "Data from ny_noaa_data"
) +
theme_classic() +
theme(legend.position = "bottom"
)
ggplotly(ny_noaa_data_snowfall)
noaa<- separate(noaa,date, into = c("year", "month","day"), sep = "-")
hexplot = filter(noaa, !is.na(tmax))%>%
filter(!is.na(tmin))%>%
mutate(tmax = as.numeric(tmax))%>%
mutate(tmin = as.numeric(tmin))%>%
filter(id == input$id_choice) %>%
ggplot(aes(tmin, tmax)) +
geom_hex()+
labs(
x = "Minimum temperature (tenths of degrees C)",
y = "Maximum temperature (tenths of degrees C)",
caption = "ny_noaa_data_year"
) +
theme_classic()
ggplotly(hexplot)
library(flexdashboard)
library(tidyverse)
library(janitor)
library(stringr)
library(forcats)
library(viridis)
library(plotly)
library(shiny)
library(httr)
library(jsonlite)
noaa<- read_csv("nynoaadat.zip")  %>%
separate(date, into = c("year", "month","day"), sep = "-")
noaa$year<- as.numeric(noaa$year)
ny_noaa_data_snowfall =
filter(noaa, snow > 0 & snow < 100)%>%
ggplot(aes(x = year, y = snow, fill = year, color = year)) +
geom_violin()+
labs(
x = "year",
y = "snowfall(mm)",
caption = "Data from ny_noaa_data"
) +
theme_classic() +
theme(legend.position = "bottom")
ggplotly(ny_noaa_data_snowfall)
rm(list=ls())
ny_noaa_data_snowfall =
filter(noaa, snow > 0 & snow < 100)%>%
ggplot(aes(x = year, y = snow, fill = year, color = year)) +
geom_violin()+
labs(
x = "year",
y = "snowfall(mm)",
caption = "Data from ny_noaa_data"
) +
theme_classic() +
theme(legend.position = "bottom")
ggplotly(ny_noaa_data_snowfall)
noaa<- read_csv("nynoaadat.zip")  %>%
separate(date, into = c("year", "month","day"), sep = "-")
noaa$year<- as.numeric(noaa$year)
noaa<- read_csv("nynoaadat.zip")  %>%
separate(date, into = c("year", "month","day"), sep = "-")
ny_noaa_data_snowfall =
filter(noaa, snow > 0 & snow < 100)%>%
ggplot(aes(x = year, y = snow, fill = year, color = year)) +
geom_violin()+
labs(
x = "year",
y = "snowfall(mm)",
caption = "Data from ny_noaa_data"
) +
theme_classic() +
theme(legend.position = "bottom")
ggplotly(ny_noaa_data_snowfall)
noaa<- noaa %>%
group_by(year)
noaa$tmax<- as.numeric(noaa$tmax)
hist<- ggplot(noaa, aes(x =tmax , fill = year)) +
geom_histogram(alpha= 0.8) +
labs(x = "Maximum temperature (tenths of degrees C)", y = "Number")
hist
max_prcp = noaa %>%distinct(prcp) %>% max()
max_prcp = noaa %>%distinct(noaa$prcp) %>% max()
max_prcp = noaa %>%distinct(prcp) %>% max()
class(noaa$prcp)
max_prcp = noaa %>%distinct(snwd) %>% max()
min_prcp = noaa %>% distinct(prcp) %>% min()
renderUI({
max_prcp = noaa %>% distinct(prcp) %>% max()
min_prcp = noaa %>% distinct(prcp) %>% min()
sliderInput("prcp_range", label = h3("Choose Precipitation range"), min = min_prcp,
max = max_prcp, value = c(100, 400))
})
?distinct
max_prcp = noaa %>% distinct(prcp)
View(max_prcp)
noaa<- read_csv("nynoaadat.zip")  %>%
separate(date, into = c("year", "month","day"), sep = "-") %>%
filter(!is.na(prcp))
month = noaa %>% distinct(month)
max_prcp = noaa %>% distinct(prcp)
max_prcp = noaa %>% distinct(prcp) %>% max()
